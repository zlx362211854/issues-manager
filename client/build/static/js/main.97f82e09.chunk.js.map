{"version":3,"sources":["ajax.js","Container/Lists/index.js","Container/Comments/index.js","Container/Editor/index.js","Container/Login/index.js","Container/Account/index.js","Container/index.js","App.js","serviceWorker.js","index.js"],"names":["ajax","url","Promise","resolve","reject","fetch","then","response","json","resp","catch","err","Lists","props","useState","issues","setIssues","useEffect","getIssues","handleClick","issue","openComments","className","style","height","window","innerHeight","List","component","aria-label","map","ListItem","alignItems","key","id","divider","onClick","ListItemAvatar","Avatar","alt","src","user","avatar_url","ListItemText","primary","login","secondary","Fragment","Typography","variant","color","title","body","length","slice","comments","labels","l","Chip","label","name","node_id","size","background","MarkdownIt","require","Comments","setComments","loading","setLoading","getComments","comments_url","gutterBottom","textAlign","paddingLeft","dangerouslySetInnerHTML","__html","highlight","str","lang","hljs","getLanguage","value","__","render","comment","createIssue","Editor","mdParser","closeEditor","text","setText","setTitle","newIssue","opts","token","localStorage","getItem","error","info","console","limit","remaining","Date","reset","toISOString","Error","message","Notification","width","innerWidth","TextField","margin","placeholder","fullWidth","InputLabelProps","shrink","onChange","e","target","Button","renderHTML","html","Login","username","setUsername","setToken","helperText","log","setItem","JSON","stringify","onOk","account","openMenu","setOpenMenu","openMenuBool","setOpenMenuBool","localAccount","parse","handleClose","AppBar","position","Toolbar","marginLeft","currentTarget","aria-controls","aria-haspopup","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","removeItem","Container","state","edit","setState","openEditor","onLoginSuccess","onLogOutSuccess","this","Fab","Component","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97f82e09.chunk.js","sourcesContent":["const ajax = (url) => {\n  return new Promise((resolve, reject) => {\n    fetch(url).then((response) => {\n      return response.json();\n    }).then(resp => {\n      resolve(resp)\n    }).catch(err => {\n      reject(err)\n    })\n  })\n}\nexport default ajax;","import React, { useState, useEffect } from 'react';\nimport '../index.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport ajax from '../../ajax';\nimport './index.css'\nexport default function Lists(props) {\n  const [issues, setIssues] = useState([]);\n  useEffect(() => {\n    getIssues()\n  }, [])\n  const getIssues = () => {\n    ajax('https://api.github.com/repos/zlx362211854/daily-study/issues').then(\n      resp => {\n        if (resp) {\n          setIssues(resp);\n        }\n      }\n    );\n  };\n  const handleClick = (issue) => () => {\n    props.openComments(issue)\n  }\n  return (\n    <div className=\"listContent\"  style={{ height: window.innerHeight - 60 }}>\n      <div className=\"listHeader\" />\n      <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n        {issues.map(issue => {\n          return (\n            <ListItem alignItems=\"flex-start\" key={issue.id} divider={true} onClick={handleClick(issue)}>\n              <ListItemAvatar>\n                <Avatar\n                  alt=\"Travis Howard\"\n                  src={issue.user.avatar_url}\n                />\n              </ListItemAvatar>\n              <ListItemText\n                primary={issue.user.login}\n                secondary={\n                  <React.Fragment>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      color=\"textPrimary\"\n                    >\n                      {issue.title}\n                    </Typography>\n                    <br/>\n                    {issue.body.length > 60 ? issue.body.slice(0, 60) + '...' : issue.body}\n                    <p className='commentsCount'>{issue.comments + ' comments'}</p>\n                    {issue.labels.map(l => {\n                      return <Chip label={l.name} key={l.node_id} size=\"small\" style={{background: '#' + l.color}}/>\n                    })}\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </div>\n  );\n}\n\n","import React, { useState, useEffect } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport ajax from '../../ajax';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/github.css';\nimport './index.css';\nvar MarkdownIt = require('markdown-it');\nexport default function Comments(props) {\n  const { issue } = props;\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getComments(props.issue);\n  }, [issue]);\n  const getComments = issue => {\n    setLoading(true);\n    ajax(issue.comments_url).then(resp => {\n      setLoading(false);\n      if (resp) {\n        setComments(resp);\n      }\n    });\n  };\n  return (\n    <div>\n      <Typography\n        variant=\"h6\"\n        gutterBottom\n        style={{ textAlign: 'left', paddingLeft: '16px' }}\n      >\n        {issue.title}\n      </Typography>\n      <div className={loading ? 'loading' : ''}>\n        {issue.body &&\n          <div\n            className=\"issueBody\"\n            dangerouslySetInnerHTML={{\n              __html: new MarkdownIt({\n                highlight: function(str, lang = 'javascript') {\n                  if (lang && hljs.getLanguage(lang)) {\n                    try {\n                      return hljs.highlight(lang, str).value;\n                    } catch (__) {}\n                  }\n                }\n              }).render(issue.body)\n            }}\n          />\n        }\n        {comments.map(comment => {\n          return (\n            <ListItem alignItems=\"flex-start\" key={comment.id} divider={true}>\n              <ListItemAvatar>\n                <Avatar alt=\"Travis Howard\" src={comment.user.avatar_url} />\n              </ListItemAvatar>\n              <ListItemText\n                primary={comment.user.login}\n                secondary={\n                  <React.Fragment>\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      color=\"textPrimary\"\n                    >\n                      <div\n                        dangerouslySetInnerHTML={{\n                          __html: new MarkdownIt({\n                            highlight: function(str, lang = 'javascript') {\n                              if (lang && hljs.getLanguage(lang)) {\n                                try {\n                                  return hljs.highlight(lang, str).value;\n                                } catch (__) {}\n                              }\n                            }\n                          }).render(comment.body)\n                        }}\n                      />\n                    </Typography>\n                  </React.Fragment>\n                }\n              />\n            </ListItem>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/github.css';\nimport MdEditor from 'react-markdown-editor-lite';\nimport MarkdownIt from 'markdown-it';\nimport './index.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nvar createIssue = require('github-create-issue');\n\nexport default function Editor(props) {\n  const mdParser = new MarkdownIt({\n    highlight: function(str, lang = 'javascript') {\n      if (lang && hljs.getLanguage(lang)) {\n        try {\n          return hljs.highlight(lang, str).value;\n        } catch (__) {}\n      }\n    }\n  });\n  const { value, closeEditor } = props;\n  const [text, setText] = useState('');\n  const [title, setTitle] = useState('');\n  useEffect(() => {\n    if (value) {\n      setText(value);\n    }\n  }, []);\n  const handleEditorChange = () => ({ html, text }) => {\n    setText(text);\n  };\n  const renderHTML = text => {\n    return mdParser.render(text);\n  };\n  const titleChange = (e) => {\n    const title = e.target.value;\n    setTitle(title)\n  }\n  const submit = () => {\n    if (title && text) {\n      newIssue({\n        title,\n        text\n      })\n    } else {\n      new window.Notification('Warning', {\n        body: 'title or text validation failed!'\n      })\n    }\n  }\n  const newIssue = ({title, text}) => {\n    var opts = {\n      // token: '0c4183108e289559b89fe51bfdfe29a041097c65',\n      token: window.localStorage.getItem('token'),\n      body: text\n    };\n    createIssue(\n      'zlx362211854/daily-study',\n      title,\n      opts,\n      (error, issue, info) => {\n        if (info) {\n          console.error('Limit: %d', info.limit);\n          console.error('Remaining: %d', info.remaining);\n          console.error('Reset: %s', new Date(info.reset * 1000).toISOString());\n        }\n        if (error) {\n          throw new Error(error.message);\n        }\n        if (issue) {\n          new window.Notification('Create issue successfully!', {\n            title: issue.title,\n            body: issue.body.slice(0, 20) + '...'\n          })\n          closeEditor()\n        }\n      }\n    );\n  };\n  return (\n    <div style={{ height: '100%', width: window.innerWidth - 310 + 'px' }}>\n      <div className=\"title\">\n        <div className=\"titleInput\">\n          <TextField\n            id=\"standard-full-width\"\n            label=\"title\"\n            style={{ margin: 8 }}\n            placeholder=\"Enter the title\"\n            fullWidth\n            margin=\"normal\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            onChange={titleChange}\n          />\n        </div>\n        <div className=\"titleButton\">\n          <Button variant=\"contained\" color=\"primary\" onClick={submit}>Submit</Button>\n        </div>\n      </div>\n      <div className=\"mdEditor\">\n        <MdEditor\n          value={text}\n          renderHTML={renderHTML}\n          onChange={handleEditorChange()}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ajax from '../../ajax';\nexport default function Login(props) {\n  const [username, setUsername] = useState('');\n  const [token, setToken] = useState('');\n  const userNameChange = (e) => {\n    const username = e.target.value;\n    setUsername(username)\n  }\n  const tokenChange = (e) => {\n    const token = e.target.value;\n    setToken(token)\n  }\n  const validate = () => {\n    if (username && token) {\n      ajax('https://api.github.com/user?access_token=' + token).then((resp) => {\n        console.log(resp, 'rrrrrrr')\n        if (resp) {\n          if (resp.login === username) {\n            new window.Notification(username, {\n              body: 'successful!'\n            })\n            window.localStorage.setItem('account', JSON.stringify(resp))\n            window.localStorage.setItem('token', token);\n            props.onOk({account: resp, token})\n          }\n        }\n      })\n    }\n  }\n  return (\n    <div className=\"homePage\">\n      <div className=\"formContent\">\n        <TextField\n          id=\"standard-full-width\"\n          label=\"User\"\n          style={{ margin: 8 }}\n          placeholder=\"github user account\"\n          helperText=\"Your github user name\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          onChange={userNameChange}\n        />\n        <TextField\n          id=\"standard-full-width\"\n          label=\"Token\"\n          style={{ margin: 8 }}\n          placeholder=\"Personal access tokens\"\n          helperText=\"Personal access tokens function like ordinary OAuth access tokens. They can be used instead of a password for Git over HTTPS, go https://github.com/settings/tokens to cenerate a token\"\n          fullWidth\n          margin=\"normal\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          onChange={tokenChange}\n        />\n        <Button className=\"loginButton\" variant=\"outlined\" color=\"secondary\" onClick={validate}>Login</Button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nexport default function Lists(props) {\n  const [openMenu, setOpenMenu] = useState(null);\n  const [openMenuBool, setOpenMenuBool] = useState(false);\n  const localAccount = JSON.parse(window.localStorage.getItem('account'));\n  const handleMenu = e => {\n    setOpenMenu(e.currentTarget);\n    setOpenMenuBool(true);\n  };\n  const handleClose = () => {\n    setOpenMenu(null);\n    setOpenMenuBool(false);\n  };\n  const handleLogout = () => {\n    window.localStorage.removeItem('account');\n    window.localStorage.removeItem('token');\n    handleClose();\n    props.onOk();\n  };\n  return (\n    <div>\n      <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            {localAccount.login}\n          </Typography>\n          <Avatar\n            style={{ marginLeft: 50 }}\n            onClick={handleMenu}\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            alt={localAccount.login}\n            src={localAccount.avatar_url}\n          />\n          <Menu\n            id=\"menu-appbar\"\n            anchorEl={openMenu}\n            anchorOrigin={{\n              vertical: 'top',\n              horizontal: 'right'\n            }}\n            keepMounted\n            transformOrigin={{\n              vertical: 'top',\n              horizontal: 'right'\n            }}\n            open={openMenuBool}\n            onClose={handleClose}\n          >\n            <MenuItem onClick={handleLogout}>Logout</MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Lists from './Lists';\nimport Comments from './Comments';\nimport Editor from './Editor';\nimport './index.css';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Login from './Login';\nimport Account from './Account';\nexport default class Container extends Component {\n  state = {\n    issue: {},\n    edit: false,\n    login: false\n  };\n  openComments = issue => {\n    this.setState({\n      issue,\n      edit: false\n    });\n  };\n  openEditor = () => {\n    const { edit } = this.state;\n    if (!edit) {\n      this.setState({\n        edit: true\n      });\n    }\n  };\n  closeEditor = () => {\n    this.setState({\n      edit: false\n    });\n  };\n  onLoginSuccess = ({ account, token }) => {\n    this.setState({\n      login: true\n    });\n  };\n  onLogOutSuccess = () => {\n    this.setState({\n      login: false\n    });\n  }\n  render() {\n    const { issue, edit, login } = this.state;\n    const localAccount = JSON.parse(window.localStorage.getItem('account'));\n    if (login || localAccount) {\n      return (\n        <div className=\"container\">\n          <div className=\"list\">\n            <div className=\"account\">\n              <Account onOk={this.onLogOutSuccess}/>\n            </div>\n            <Lists openComments={this.openComments} />\n            <div className=\"add\" onClick={this.openEditor}>\n              <Fab aria-label=\"add\">\n                <AddIcon />\n              </Fab>\n            </div>\n          </div>\n          <div className=\"content\" style={{ height: window.innerHeight }}>\n            {edit ? (\n              <Editor closeEditor={this.closeEditor} />\n            ) : (\n              <Comments issue={issue} />\n            )}\n          </div>\n        </div>\n      );\n    } else {\n      return <Login onOk={this.onLoginSuccess} />;\n    }\n  }\n}\n","import React from 'react';\nimport './markdown.css'\nimport './App.css';\n\nimport Container from './Container'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}